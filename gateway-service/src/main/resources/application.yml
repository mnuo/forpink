server:
  port: 8088
  host: localhost
  servlet:
      context-path: /gateway-service
swagger:
  open: true
## 数据源配置
spring:
   datasource:
      url: jdbc:mysql://localhost:3306/pink?characterEncoding=utf8&useSSL=false&serverTimezone=UTC&rewriteBatchedStatements=true&zeroDateTimeBehavior=CONVERT_TO_NULL
      username: root
      password: root123
      # schema: classpath:springbootsecurityauth.sql
      sql-script-encoding: utf-8
      initialization-mode: always
      driver-class-name: com.mysql.jdbc.Driver
      # 初始化大小，最小，最大
      initialSize: 1
      minIdle: 3
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 30000
      validationQuery: select 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# JPA配置
   jpa:
      database-platform: org.hibernate.dialect.MySQL5Dialect # mysql5.5版本使用 版本以上使用:org.hibernate.dialect.MySQLDialect
      show-sql: true   # 运行时输出jpa执行的sql语句
      hibernate:
         ddl-auto: update
   jackson:
       time-zone: GMT+8
   application:
      name: auth-service  
   redis:
      open: true # 是否开启redis缓存  true开启   false关闭
      database: 1
      host: 127.0.0.1
      port: 6379
      timeout: 5000s  # 连接超时时长（毫秒）
      jedis:
         pool:
            max-active: 8 #连接池最大连接数（使用负值表示没有限制）
            max-idle: 8  #连接池中的最大空闲连接
            max-wait: -1s #连接池最大阻塞等待时间（使用负值表示没有限制)
            min-idle: 0  #连接池中的最小空闲连接
   cloud:
      gateway:
         routes: #配置路由路径
           - id: sso-service
             uri: lb://sso-service
             predicates:
               - Path=/api/sso-service/**
             filters:
               - StripPrefix=1
           - id: auth-service
             uri: lb://auth-service
             predicates:
               - Path=/api/auth-service/**
             filters:
               - StripPrefix=11
         discovery:
           locator:
             enabled: true #开启从注册中心动态创建路由的功能
             lower-case-service-id: true #使用小写服务名，默认是大写
## 日志配置
logging:
  config: src/main/resources/logback.xml
  
service:
   client:
      clientSecret: 123123
      clientId: client_1
      grantType:
         - password
         - refresh_token
   ignore:
      resources: 
         - /app/user
         - /oauth/*
         - /auth/user/login
         
  